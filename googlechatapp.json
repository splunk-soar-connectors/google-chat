{
    "appid": "7b26e08d-301d-4191-b07f-337ca036d402",
    "name": "Google Chat App",
    "description": "This app integrate services with Google Chat and manage Chat resources such as i.e messages. Remmeber that user will need authentication code, check Github or SplunkBase for information on how to obtain it",
    "type": "network device",
    "product_vendor": "Google Cloud",
    "logo": "logo_googlechatapp.svg",
    "logo_dark": "logo_googlechatapp_dark.svg",
    "product_name": "Google Chat App",
    "python_version": "3",
    "product_version_regex": ".*",
    "publisher": "Splunk Community",
    "contributors": [
        {
            "name": "Patryk Dros"
        }
    ],
    "license": "Copyright (c) Splunk, 2024",
    "app_version": "1.0.1",
    "utctime_updated": "2024-04-16T15:27:25.341827Z",
    "package_name": "phantom_googlechatapp",
    "main_module": "googlechatapp_connector.py",
    "min_phantom_version": "6.1.1.211",
    "fips_compliant": false,
    "app_wizard_version": "1.0.0",
    "configuration": {
        "client_id": {
            "description": "Auth application Client ID",
            "data_type": "string",
            "required": true,
            "order": 0
        },
        "client_secret": {
            "description": "Auth application Client Secret",
            "data_type": "password",
            "required": true,
            "order": 1
        },
        "code": {
            "description": "Code to receive authorization token. Read README.md on how to obtain this",
            "data_type": "password",
            "required": true,
            "order": 2
        },
        "redirect_uri": {
            "description": "Redirect URL for authorization",
            "data_type": "string",
            "required": true,
            "default": "http://localhost",
            "order": 3
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "identifier": "test_connectivity",
            "description": "Validate the asset configuration for connectivity using supplied configuration",
            "type": "test",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "create message",
            "identifier": "create_message",
            "description": "Creates a message in a Google Chat space",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "parent_space": {
                    "description": "The resource name of the space in which to create a message. Remember parent has match pattern: /^spaces/[^/]+$/",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                },
                "text_message": {
                    "description": "Message content",
                    "data_type": "string",
                    "required": true,
                    "order": 1
                },
                "requestid": {
                    "description": "A unique request ID for this message. Specifying an existing request ID returns the message created with that ID instead of creating a new message",
                    "data_type": "string",
                    "order": 2
                },
                "messagereplyoption": {
                    "description": "Specifies whether a message starts a thread or replies to one. Only supported in named spaces",
                    "data_type": "string",
                    "value_list": [
                        "MESSAGE_REPLY_OPTION_UNSPECIFIED",
                        "REPLY_MESSAGE_FALLBACK_TO_NEW_THREAD",
                        "REPLY_MESSAGE_OR_FAIL"
                    ],
                    "order": 3
                },
                "messageid": {
                    "description": "A custom ID for a message",
                    "data_type": "string",
                    "order": 4
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.parent_space",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.text_message",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.requestid",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.messagereplyoption",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.messageid",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "read message",
            "identifier": "read_message",
            "description": "Returns details about a message",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "name": {
                    "description": "Resource name of the message. Remember name has match pattern: /^spaces/[^/]+/messages/[^/]+$/. Example: spaces/koB0FMAAAAE/messages/dd0BuBH2QzM.dd0BuBH2QzM",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.sender.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.sender.type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.createTime",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.text",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.thread.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.space.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.argumentText",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.formattedText",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        }
    ]
}
